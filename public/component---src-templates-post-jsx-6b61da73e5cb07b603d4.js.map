{"version":3,"sources":["webpack:///./src/components/UserLinks/UserLinks.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/templates/post.jsx"],"names":["Component","Footer","render","config","this","props","url","siteRss","copyright","className","to","PostTemplate","data","slug","pageContext","postNode","markdownRemark","post","frontmatter","id","Helmet","title","siteTitle","SEO","postPath","postSEO","dangerouslySetInnerHTML","__html","html","React","pageQuery"],"mappings":"iSAGwBA,Y,cCyBTC,E,gLAtBbC,OAAA,WAAU,IACAC,EAAWC,KAAKC,MAAhBF,OACFG,EAAMH,EAAOI,QACXC,EAAcL,EAAdK,UACR,OAAKA,EAIH,4BAAQC,UAAU,UAEhB,yBAAKA,UAAU,oBACb,4BAAKD,GAEL,kBAAC,OAAD,CAAME,GAAIJ,GACR,gDATC,M,GANQN,a,6CCMAW,E,gLACnBT,OAAA,WAAU,IAAD,EACuBE,KAAKC,MAA3BO,EADD,EACCA,KACAC,EAFD,EACOC,YACND,KACFE,EAAWH,EAAKI,eAChBC,EAAOF,EAASG,YAKtB,OAJKD,EAAKE,KACRF,EAAKE,GAAKN,GAIV,kBAAC,IAAD,KACE,6BACE,kBAACO,EAAA,EAAD,KACE,+BAAWH,EAAKI,MAAhB,MAA2BlB,IAAOmB,YAEpC,kBAACC,EAAA,EAAD,CAAKC,SAAUX,EAAME,SAAUA,EAAUU,SAAO,IAChD,6BACE,4BAAKR,EAAKI,OACV,yBAAKK,wBAAyB,CAAEC,OAAQZ,EAASa,QAIjD,kBAAC,EAAD,CAAQzB,OAAQA,U,GAvBc0B,IAAM7B,WAgCnC8B,EAAS,c","file":"component---src-templates-post-jsx-6b61da73e5cb07b603d4.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./UserLinks.css\";\r\n\r\nclass UserLinks extends Component {\r\n  getLinkElements() {\r\n    const { userLinks } = this.props.config;\r\n    const { labeled } = this.props;\r\n    return userLinks.map(link => (\r\n      <a href={link.url}>\r\n        <span>UserLinks</span>\r\n        <button type=\"button\" key={link.label}>\r\n          {labeled ? link.label : \"\"}\r\n        </button>\r\n      </a>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const { userLinks } = this.props.config;\r\n    if (!userLinks) {\r\n      return null;\r\n    }\r\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\r\n  }\r\n}\r\n\r\nexport default UserLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport UserLinks from \"../UserLinks/UserLinks\";\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const { config } = this.props;\r\n    const url = config.siteRss;\r\n    const { copyright } = config;\r\n    if (!copyright) {\r\n      return null;\r\n    }\r\n    return (\r\n      <footer className=\"footer\">\r\n        {/* <UserLinks config={config} labeled /> */}\r\n        <div className=\"notice-container\">\r\n          <h4>{copyright}</h4>\r\n\r\n          <Link to={url}>\r\n            <button>Subscribe</button>\r\n          </Link>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\n// import PostTags from \"../components/PostTags/PostTags\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./b16-tomorrow-dark.css\";\r\nimport \"./post.css\";\r\n\r\nexport default class PostTemplate extends React.Component {\r\n  render() {\r\n    const { data, pageContext } = this.props;\r\n    const { slug } = pageContext;\r\n    const postNode = data.markdownRemark;\r\n    const post = postNode.frontmatter;\r\n    if (!post.id) {\r\n      post.id = slug;\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <div>\r\n          <Helmet>\r\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n          <div>\r\n            <h1>{post.title}</h1>\r\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\r\n\r\n            {/* <div className=\"post-meta\"> <PostTags tags={post.tags} /> </div> */}\r\n\r\n            <Footer config={config} />\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n        category\r\n        tags\r\n      }\r\n      fields {\r\n        slug\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}