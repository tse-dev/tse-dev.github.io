{"version":3,"sources":["webpack:///./src/templates/listing.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["Listing","renderPaging","this","props","pageContext","currentPageNum","pageCount","prevPage","nextPage","isFirstPage","isLastPage","className","to","Array","map","_val","index","pageNum","key","render","postEdges","data","allMarkdownRemark","edges","title","config","siteTitle","React","Component","listingQuery","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","post"],"mappings":"mkCASMA,E,wLACJC,aAAA,WAAgB,IAAD,EACyBC,KAAKC,MAAMC,YAAzCC,EADK,EACLA,eAAgBC,EADX,EACWA,UAClBC,EAAWF,EAAiB,GAAM,EAAI,IAA3B,KAAqCA,EAAiB,GAAtD,IACXG,EAAQ,KAAOH,EAAiB,GAAxB,IACRI,EAAiC,IAAnBJ,EACdK,EAAaL,IAAmBC,EAEtC,OACE,yBAAKK,UAAU,qBACXF,GAAe,kBAAC,OAAD,CAAMG,GAAIL,GAAV,YAChB,EAAIM,MAAMP,IAAYQ,KAAI,SAACC,EAAMC,GAChC,IAAMC,EAAUD,EAAQ,EACxB,OACE,kBAAC,OAAD,CACEE,IAAG,gBAAkBD,EACrBL,GAAgB,IAAZK,EAAgB,IAAhB,IAA0BA,EAA1B,KAEHA,OAILP,GAAc,kBAAC,OAAD,CAAME,GAAIJ,GAAV,U,EAKtBW,OAAA,WACE,IAAMC,EAAYlB,KAAKC,MAAMkB,KAAKC,kBAAkBC,MAEpD,OACE,kBAAC,IAAD,KACE,yBAAKZ,UAAU,qBACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAQa,MAAOC,IAAOC,YACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaN,UAAWA,KAEzBlB,KAAKD,kB,GAtCM0B,IAAMC,WA6Cb5B,YAGR,IAAM6B,EAAY,c,6ECtDnBC,E,wLACJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAXA9B,KAAKC,MAAMiB,UAAUa,SAAQ,SAAAC,GAC3BF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjClB,MAAOU,EAASG,KAAKI,YAAYjB,MACjCmB,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,gBAGvBb,G,EAGTb,OAAA,WACE,IAAMa,EAAW9B,KAAK6B,cACtB,OACE,6BAEEC,EAASlB,KAAI,SAAAgC,GAAI,OACf,kBAAC,OAAD,CAAMlC,GAAIkC,EAAKV,KAAMlB,IAAK4B,EAAKtB,OAC7B,4BAAKsB,EAAKtB,a,GAxBIG,IAAMC,WAiCjBE,O","file":"component---src-templates-listing-jsx-7ea4e3c8014e9bf1531a.js","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./listing.css\";\r\n\r\nclass Listing extends React.Component {\r\n  renderPaging() {\r\n    const { currentPageNum, pageCount } = this.props.pageContext;\r\n    const prevPage = currentPageNum - 1 === 1 ? \"/\" : `/${currentPageNum - 1}/`;\r\n    const nextPage = `/${currentPageNum + 1}/`;\r\n    const isFirstPage = currentPageNum === 1;\r\n    const isLastPage = currentPageNum === pageCount;\r\n\r\n    return (\r\n      <div className=\"paging-container\">\r\n        {!isFirstPage && <Link to={prevPage}>Previous</Link>}\r\n        {[...Array(pageCount)].map((_val, index) => {\r\n          const pageNum = index + 1;\r\n          return (\r\n            <Link\r\n              key={`listing-page-${pageNum}`}\r\n              to={pageNum === 1 ? \"/\" : `/${pageNum}/`}\r\n            >\r\n              {pageNum}\r\n            </Link>\r\n          );\r\n        })}\r\n        {!isLastPage && <Link to={nextPage}>Next</Link>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n\r\n    return (\r\n      <Layout>\r\n        <div className=\"listing-container\">\r\n          <div className=\"posts-container\">\r\n            <Helmet title={config.siteTitle} />\r\n            <SEO />\r\n            <PostListing postEdges={postEdges} />\r\n          </div>\r\n          {this.renderPaging()}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Listing;\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const listingQuery = graphql`\r\n  query ListingQuery($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: [fields___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div>\r\n        {/* Your post list here. */\r\n        postList.map(post => (\r\n          <Link to={post.path} key={post.title}>\r\n            <h1>{post.title}</h1>\r\n          </Link>\r\n        ))\r\n}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}